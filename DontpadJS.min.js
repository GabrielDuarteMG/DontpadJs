var postText=async(t,e,r=!1,o="dontpadJs")=>{const n=location.protocol;let a;1==r&&(e=encryptString({data:e},o)),a="https:"==n?"https://cors-anywhere.herokuapp.com/http://dontpad.com/"+t:"http://dontpad.com/"+t;const c=await fetch(a,{method:"POST",mode:"no-cors",headers:{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8","Access-Control-Allow-Headers":"*","Access-Control-Allow-Origin":"*","Access-Control-Request-Method":"POST","Access-Control-Allow-Headers":"Content-Type"},body:`text=${e}`});await c},getText=(t,e=!1,r=!1,o="dontpadJs")=>{let n=!1;return fetch("https://cors-anywhere.herokuapp.com/http://dontpad.com/"+t+".txt",{method:"GET",headers:{"Content-Type":"text/html; charset=utf-8"}}).then(t=>t.text()).then(t=>{try{if(1==r){n=!!validateJwt(t,o);let r=1==e?decryptString(t).data:t;return{Signature:n,data:r}}return 1==e?decryptString(t).data:t}catch(t){return console.log("Error: "+t),n=!1,null}}).catch(t=>console.error(t))};document.addEventListener("DOMContentLoaded",function(t){try{encryptString({Load:"Load"},"Load")}catch(t){t instanceof ReferenceError&&setTimeout(console.log.bind(console,"%cwarn%c Error to load Encryptation Lib, Follow Link to use references > https://pastebin.com/WhVWXGjF","background: #e3ce10;color:#FFF;padding:5px;border-radius: 3px;line-height: 5px;user-select: none;",""))}setTimeout(console.log.bind(console,"%cinfo%c DontpadJS is loaded! https://github.com/GabrielDuarteMG/DontpadJs","background: #00b84c;color:#FFF;padding:5px;border-radius: 3px;line-height: 5px;user-select: none;",""))});var validateJwt=(t,e)=>{let r="HS256",o="DPJs",n=JSON.parse(atob(t.split(".")[0])),a=t.split(".")[2];if(r!=n.alg||o!=n.typ)return!1;{let r=t.split(".")[0]+"."+t.split(".")[1];return r=CryptoJS.HmacSHA256(r,e),(r=base64url(r))==a}},encryptString=(t,e)=>{let r=CryptoJS.enc.Utf8.parse(JSON.stringify({alg:"HS256",typ:"DPJs"})),o=base64url(r),n=CryptoJS.enc.Utf8.parse(JSON.stringify(t)),a=base64url(n),c=o+"."+a;return c=CryptoJS.HmacSHA256(c,e),o+"."+a+"."+(c=base64url(c))},decryptString=t=>{return JSON.parse(atob(t.split(".")[1]))};const base64url=t=>{let e=CryptoJS.enc.Base64.stringify(t);return e=(e=(e=e.replace(/=+$/,"")).replace(/\+/g,"-")).replace(/\//g,"_")};
